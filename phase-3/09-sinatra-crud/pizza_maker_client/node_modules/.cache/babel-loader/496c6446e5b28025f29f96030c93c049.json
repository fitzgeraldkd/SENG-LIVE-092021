{"ast":null,"code":"var _jsxFileName = \"/home/kenny/Development/code/SENG-LIVE-092021/phase-3/09-sinatra-crud/pizza_maker_client/src/components/topping/ToppingInterface.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewTopping from \"./NewTopping\";\nimport ToppingList from \"./ToppingList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Topping() {\n  _s();\n\n  const [toppings, setToppings] = useState([]); // Make a GET request for all Toppings\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/toppings\").then(resp => resp.json()).then(toppings => setToppings(toppings));\n  }, []);\n\n  const addNewTopping = topping => {\n    setToppings([...toppings, topping]);\n  };\n\n  function handleUpdateTopping(updatedTopping) {\n    const updatedToppings = toppings.map(topping => {\n      if (topping.id === updatedTopping.id) {\n        return updatedTopping;\n      } else {\n        return topping;\n      }\n    });\n    setToppings(updatedToppings);\n  }\n\n  const deleteTopping = id => {\n    const updatedToppings = toppings.filter(topping => topping.id !== id);\n    setToppings(updatedToppings);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ToppingList, {\n      toppings: toppings,\n      deleteTopping: deleteTopping,\n      onUpdateTopping: handleUpdateTopping\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTopping, {\n      addNewTopping: addNewTopping\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Topping, \"KD2RFHsEtJYq9RrkEtdrZADjB0Q=\");\n\n_c = Topping;\nexport default Topping;\n\nvar _c;\n\n$RefreshReg$(_c, \"Topping\");","map":{"version":3,"sources":["/home/kenny/Development/code/SENG-LIVE-092021/phase-3/09-sinatra-crud/pizza_maker_client/src/components/topping/ToppingInterface.js"],"names":["React","useEffect","useState","NewTopping","ToppingList","Topping","toppings","setToppings","fetch","then","resp","json","addNewTopping","topping","handleUpdateTopping","updatedTopping","updatedToppings","map","id","deleteTopping","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CADiB,CAGjB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESH,QAAD,IAAcC,WAAW,CAACD,QAAD,CAFjC;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMM,aAAa,GAAIC,OAAD,IAAa;AACjCN,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcO,OAAd,CAAD,CAAX;AACD,GAFD;;AAIA,WAASC,mBAAT,CAA6BC,cAA7B,EAA6C;AAC3C,UAAMC,eAAe,GAAGV,QAAQ,CAACW,GAAT,CAAcJ,OAAD,IAAa;AAChD,UAAIA,OAAO,CAACK,EAAR,KAAeH,cAAc,CAACG,EAAlC,EAAsC;AACpC,eAAOH,cAAP;AACD,OAFD,MAEO;AACL,eAAOF,OAAP;AACD;AACF,KANuB,CAAxB;AAOAN,IAAAA,WAAW,CAACS,eAAD,CAAX;AACD;;AAED,QAAMG,aAAa,GAAID,EAAD,IAAQ;AAC5B,UAAMF,eAAe,GAAGV,QAAQ,CAACc,MAAT,CAAiBP,OAAD,IAAaA,OAAO,CAACK,EAAR,KAAeA,EAA5C,CAAxB;AACAX,IAAAA,WAAW,CAACS,eAAD,CAAX;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEV,QADZ;AAEE,MAAA,aAAa,EAAEa,aAFjB;AAGE,MAAA,eAAe,EAAEL;AAHnB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,UAAD;AAAY,MAAA,aAAa,EAAEF;AAA3B;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAxCQP,O;;KAAAA,O;AA0CT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NewTopping from \"./NewTopping\";\nimport ToppingList from \"./ToppingList\";\n\nfunction Topping() {\n  const [toppings, setToppings] = useState([]);\n\n  // Make a GET request for all Toppings\n  useEffect(() => {\n    fetch(\"http://localhost:9292/toppings\")\n      .then((resp) => resp.json())\n      .then((toppings) => setToppings(toppings));\n  }, []);\n\n  const addNewTopping = (topping) => {\n    setToppings([...toppings, topping]);\n  };\n\n  function handleUpdateTopping(updatedTopping) {\n    const updatedToppings = toppings.map((topping) => {\n      if (topping.id === updatedTopping.id) {\n        return updatedTopping;\n      } else {\n        return topping;\n      }\n    });\n    setToppings(updatedToppings);\n  }\n\n  const deleteTopping = (id) => {\n    const updatedToppings = toppings.filter((topping) => topping.id !== id);\n    setToppings(updatedToppings);\n  };\n\n  return (\n    <div className=\"App\">\n      <ToppingList\n        toppings={toppings}\n        deleteTopping={deleteTopping}\n        onUpdateTopping={handleUpdateTopping}\n      />\n      <NewTopping addNewTopping={addNewTopping} />\n    </div>\n  );\n}\n\nexport default Topping;\n"]},"metadata":{},"sourceType":"module"}